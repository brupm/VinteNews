- comment = comment.nil? ? @comment : comment 
.comment    
  %span.arrow
    = link_to image_tag("arrow-blue.png"), vote_path(:comment_id => comment.id) unless current_user && current_user.voted_for?(comment)
  .faded 
    = pluralize(comment.votes_count, I18n.t('posts.point'))
    = I18n.t('comments.submitted_by')
    = link_to comment.user.login, user_path(comment.user)
    = I18n.t('posts.posted_on')
    %span.relative_post_date
      = comment.created_at.to_formatted_s(:rfc822)
    = I18n.t('comments.since')
    |
    = link_to I18n.t('comments.link'), post_comment_path(comment.post, comment)
    - if request.url != post_url(comment.post)
      |
      = link_to I18n.t('comments.parent'), post_path(comment.post)
      |
      = "#{I18n.t("comments.news")}:"
      = link_to truncate(comment.post.title, :length => 35), post_path(comment.post)
    - if current_user.try(:admin?)
      |
      = link_to "Delete", comment_path(comment), :method => :delete, :confirm => I18n.t("comments.delete_confirmation")

  %div.comment_body  
    = comment.body  
    - if request.url != comment_url
      %div.reply_link
        = link_to I18n.t("comments.reply"), comment_path(comment)
    - else
      = render "comments/form"
%br  

%div.sub_comment
  = render :partial => "comments/comment", :collection => comment.sub_comments